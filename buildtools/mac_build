#!/bin/bash

#
# mac_build builds and creates brew formulas and binaries for newt and 
# newtmgr tools. This script should be run on the latest version of mac 
# os so the binaries for the latest os version.  
#
# 1. The mynewt-newt.rb and mynewt-newtmgr.rb are updated for the new release
# version. It also creates formulas of type mynewt-newt@<current_version> and
# and mynewt-newtmgr@current_version
#
# 2. The bottles for the new release  are added to the 
# binary-releases/mynewt-newt-tools_<newvers>  directory.
#
# 3. New bottles are created for the @current_version formulas and added
# to the binary-release/mynewt-newt-tools_<current_version> directory, 
# the bottles for the current_version are removed from the directory.
# 
set -e 
if [ "$#" -ne 2 ]; then
    echo "Usage: mac_build <new-release#> <parent directory of the binary-releases repo>"
    echo "For example, if the repo is under  ~/runtimeco then enter ~/runtimeco"
    exit 1
fi

mac_version="$(sw_vers | grep ProductVersion | cut -f 2 -d ":" | cut -f 2 -d ".")"
if [ "$mac_version" -eq 12 ] 
then 
    mac_os_string="sierra"
else
    echo "Mac OS version too old"
    exit 1
fi

# build version with _. For example, 1.3.0 -> 1_3_0
new_vers="$1"
underscore_vers="$(echo "${new_vers}" | sed 's/\./_/g')"

binary_repo_root="$2"
binary_repo=${binary_repo_root}/binary-releases
formula_path=/usr/local/Homebrew/Library/Taps/runtimeco/homebrew-mynewt

branch_name=build_${underscore_vers}
cd ${binary_repo}
echo "==== Creating ${branch_name} branch for ${binary_repo} repo"
git checkout master
git pull
git branch -f ${branch_name}
git checkout ${branch_name}

cd ${formula_path}
echo "==== Creating ${branch_name} branch for ${formula_path} repo"
git checkout master
git pull
git branch -f ${branch_name}
git checkout ${branch_name}


cur_vers=$(sed -n '/^[\t ]*version/ s/\(^[\t ]*version[\t ]*\"\)\([0-9]*\.[0-9]*\.[0-9]*\)\"/\2/p' ${formula_path}/mynewt-newt.rb)
cur_vers_major="$(echo ${cur_vers} | cut -f 1 -d '.')"
cur_vers_minor="$(echo ${cur_vers} | cut -f 2 -d '.')"
newvers_binary_dir=${binary_repo}/mynewt-newt-tools_${new_vers}
curvers_binary_dir=${binary_repo}/mynewt-newt-tools_${cur_vers}
mkdir -p ${newvers_binary_dir}

echo "before func"

function newformula () {
    set -e
    tool_name=mynewt-"$1"
    newvers_formula=${tool_name}.rb
    curvers_tool_name=${tool_name}@${cur_vers_major}.${cur_vers_minor} 
    curvers_formula=${curvers_tool_name}.rb 
    cd ${formula_path}
    cp ${newvers_formula} ${curvers_formula}
    rm -f /tmp/mynewt*tar.gz*


# download the release source tar file and compute the sha256 hash.
    echo "==== Downloading release source tar and computing sha256 hash ===="
    tarfile=mynewt_"${underscore_vers}"_tag.tar.gz
    tarurl=https://github.com/apache/${tool_name}/archive/${tarfile}
    wget -P /tmp ${tarurl}
    hash_val="$(shasum -a 256 /tmp/"${tarfile}" | cut -f 1 -d ' ' -)"

# Update the formula 
    echo "==== Updating ${newvers_formula} with new version ===="
    sed '
        /^[\t ]*version/ s/[0-9]*\.[0-9]*\.[0-9]*/'"${new_vers}"'/ 
        /^[\t ]*sha256/ s/\"[a-z0-9]*\"/\"'"${hash_val}"'\"/
        /^[\t ]*url/ s!".*\"!\"'${tarurl}'\"!
        /bottle/, /end/ { 
            /bottle/n
            /end/ ! {
	       /sha256/ d
     	       /^[\t ]*root_url/ s/[0-9]*\.[0-9]*\.[0-9]*/'"${new_vers}"'/
           }
        }
        /^[\t ]*assert_equal/ s/[0-9]*\.[0-9]*\.[0-9]*/'"${new_vers}"'/ 
    ' ${newvers_formula} > /tmp/${newvers_formula}
    cp /tmp/${newvers_formula} ${formula_path}/${newvers_formula}

    echo "==== Building bottle for ${newvers_formula} ===="
    brew install --build-bottle ${tool_name}
    bottle_hash="$(brew bottle ${tool_name} | grep sha256)"

# add the sha256 for the bottle after the cellar line in the bottle do block.
    sed '/^[\t ]*cellar/ s/^.*$/&\
'"${bottle_hash}"'/'  ${newvers_formula} > /tmp/${newvers_formula}
    cp /tmp/${newvers_formula} ${newvers_formula}

    echo "=== Moving bottle to ${newvers_binary_dir} "
    mv "${tool_name}-${new_vers}"."${mac_os_string}".bottle*.tar.gz  ${newvers_binary_dir}

# create a @version formula for the current version.

    echo "===== Creating ${curvers_formula} ====="
    cd ${formula_path}

    sed '
        /^[\t ]*class/ s/Mynewt[a-zA-Z]*/&AT'"${cur_vers_major}"''"${cur_vers_minor}"'/
        /^[\t ]*head/ s/^.*/  keg_only :versioned_formula/
        /bottle/, /end/ {
            /bottle/n 
            /end/ ! {
                /sha256/ d
            }
        }
    '  ${curvers_formula} > /tmp/${curvers_formula}
    cp /tmp/${curvers_formula}  ${curvers_formula}
    brew install --build-bottle ${curvers_tool_name}
    bottle_hash="$(brew bottle ${curvers_tool_name} | grep sha256)"
    sed '/^[\t ]*cellar/ s/^.*$/&\
'"${bottle_hash}"'/'  ${curvers_formula} > /tmp/${curvers_formula}
    cp /tmp/${curvers_formula} ${curvers_formula}

    echo "==== Moving ${curvers_tool_name} bottles to ${curvers_binary_dir} ===="
    mv "${curvers_tool_name}-${cur_vers}"."${mac_os_string}".bottle*.tar.gz  ${curvers_binary_dir}/
}   

newformula "newt"
newformula "newtmgr"

cd ${binary_repo}
echo "==== git add  ${newvers_binary_dir} ===="
git add ${newvers_binary_dir}

echo "==== git add  ${curvers_binary_dir} ===="
git add ${curvers_binary_dir}

echo "==== git add ${formula_path}/* ===="
cd  ${formula_path}
git add *

echo "==== Done! ===="

echo "************************************************************************"
echo " NOTE:You must manually do the following:"
echo "  The ${binary_repo} repo:"
echo "    1. git commit -m \" build mac os installations for ${new_vers} \" " 
echo "    2. git push origin ${branch_name}"
echo "    3. Create a PR and merge the changes in to master."
echo ""
echo "  The ${formula_path} repo:"
echo "    1. cd ${formula_path}"
echo "    2. git commit -m \" build mac os installations for ${new_vers} \"" 
echo "    3. git push origin ${branch_name}"
echo "    4. Create a PR but DO NOT merge the changes into master."
echo ""
echo "    After the mynewt-apache.org documentation has been updated and the"
echo "    final release email is sent out, merge the PR changes into master"
echo "************************************************************************"

exit 0
